#!/bin/bash
# removes files in a directory

# variables

PROMPT_FILE="What file type do you want remove \
(for example: .png)? Otherwise, type done to exit: "
PROMPT_DIR="Type in the directory you wish to delete from \
(for example: /Users/username/Desktop). Otherwise \
type done to exit: "
BEAR_START=$'o____o \n( ･ω･) < Let\'s delete your files! )\n(づ  )づ'
BEAR_DONE=$'o____o \n( ･ω･) < Goodbye! )\n(づ  )づ'
ORANGE="\e[38;5;208m"
IMG_EXT=".png"

# start 

printf "%s\n\n" "$BEAR_START"

while true; do
    read -p "$PROMPT_FILE" filetype

	if [[ $filetype == "done" ]]; then
        printf "%s\n\n" "Exiting..." "$BEAR_DONE"
        exit 0
    fi
    
    read -p "$PROMPT_DIR" dir 

    if [[ $dir == "done" ]]; then
        printf "%s\n\n" "Exiting..." "$BEAR_DONE"
        exit 0
    fi

    printf "%b" "$ORANGE[WARNING]: THIS WILL DELETE ALL $filetype files FROM THE $dir DIRECTORY."
    read -p $'Are you sure you want to continue? (y/n): \e[0m' reply

	path="$dir/*$filetype"
	count=0
	if [[ $reply =~ ^[Yy]$ ]]; then
        for file in $path; do
            if [[ -f "$file" ]]; then 
                printf  "%s\n" "Removing $file..."
                rm "$file"
				((count++))
			else
				printf "%s\n" "No $filetype files exist in the $dir directory."
			fi
		done
		printf "%b\n\n" "\e[32m$count $filetype file(s) successfully removed from $dir. \e[0m"
	else 
		printf "%s\n\n" "Exiting..." "$BEAR_DONE"
		exit 0
	fi
done
